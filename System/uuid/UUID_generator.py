# conda activate allpy311
# Генерация уникальных идентификаторов с помощью uuid

import uuid

# UUID на основе времени (версия 1)
print('UUID на основе времени (версия 1) -', uuid.uuid1())  # ➔ 23fac8cd-7e81-11f0-bda5-126fd99d7923
# UUID на основе MD5-хеша (версия 3)
print('UUID на основе MD5-хеша (версия 3) -', uuid.uuid3(uuid.NAMESPACE_DNS, "ya.ru"))
# Случайный UUID (версия 4)
print('Случайный UUID (версия 4) -', uuid.uuid4())
# UUID на основе SHA-1 (версия 5)
print('UUID на основе SHA-1 (версия 5) -', uuid.uuid5(uuid.NAMESPACE_DNS, "ya.ru"))

'''
Модуль uuid из стандартной библиотеки Python позволяет создавать уникальные идентификаторы, которые можно использовать
в базах данных, логах, конфигурациях и любых случаях, где важна уникальность.

Как это работает:
1. uuid.uuid1() — использует MAC-адрес и время (можно отслеживать источник).
2. uuid.uuid3() и uuid.uuid5() — хешируют строку с неймспейсом.
3. uuid.uuid4() — полностью случайный UUID, безопасный для большинства применений.

- Используется при генерации ключей, ссылок, сессий.
- Все UUID соответствуют стандарту RFC 4122.
- Можно использовать как строку или как байты (.hex, .int, .bytes)
'''
